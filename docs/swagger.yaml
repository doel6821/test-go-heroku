definitions:
  dto.CreateProductRequest:
    properties:
      name:
        type: string
      price:
        type: integer
    required:
    - name
    - price
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.UpdateProductRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    required:
    - name
    - price
    type: object
  response.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: Login
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register
      operationId: Register
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register
  /api/product:
    get:
      consumes:
      - application/json
      description: Get All Product
      operationId: Get All Product
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Product
    post:
      consumes:
      - application/json
      description: Create Product
      operationId: Create Product
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create Product
  /api/product/:id:
    delete:
      consumes:
      - application/json
      description: Find Product By ID
      operationId: Find Product By ID
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: name search by id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find Product By ID
    get:
      consumes:
      - application/json
      description: Find Product By ID
      operationId: Find Product By ID
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: name search by id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find Product By ID
    put:
      consumes:
      - application/json
      description: Find Product By ID
      operationId: Find Product By ID
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: name search by id
        in: query
        name: id
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find Product By ID
swagger: "2.0"
